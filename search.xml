<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[app服务端漏洞]]></title>
    <url>%2F2018%2F02%2F06%2Fapp%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%A1%E8%AE%A1%2F</url>
    <content type="text"><![CDATA[一、1.1 移动app大多通过web api服务的方式跟服务端交互，这种模式把移动安全跟web安全绑在一起。移动app以web服务的方式跟服务端交互，服务器端也是一个展示信息的网站，常见的web漏洞在这也存在,比如说SQL注入、文件上传、中间件/server漏洞等，但是由于部分app不是直接嵌入网页在app中，而是使用的api接口返回josn数据，导致扫描器爬虫无法爬取链接。 二、目前可行的两种方法 2.1 反编译APP2.2http[s]代理抓包 三、反编译app 3.1 serch：http 3.2找到此app与腾讯bugly产品有关，虽然代码被混淆过，但查找反编译出来的东西（smali反汇编代码、res资源文件、assets配置文件、lib库文件等），找到b类命名的源码，确定该app使用了Bugly Android SDK，使用了第三方接口。 结论：可在反编译工具中搜索关键字符，查看源代码中是否泄露了关键的接口和网络地址。]]></content>
      <categories>
        <category>渗透</category>
        <category>app</category>
      </categories>
      <tags>
        <tag>app</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[app研究]]></title>
    <url>%2F2018%2F02%2F06%2F%E7%A7%BB%E5%8A%A8APP%E6%BC%8F%E6%B4%9E%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A3%80%E6%B5%8B%E5%B9%B3%E5%8F%B0%E5%BB%BA%E8%AE%BE%20(1)%2F</url>
    <content type="text"><![CDATA[1.1石器时代 （2007-2011）关键词：反编绎，人工审计 2007年11年，Google正式发布了Android操作系统，2011年12月，Google发布了Android 2.3版本，Android 应用市场App数量突破10万个，随着Android系统的完善及Android设备数量的增加，Android超过塞班成为主流智能手机操作系统。与此同时，一些安全研究人员已经敏感的嗅到了Android客户端安全可能会成为未来的安全热点之一，不少传统的二进制安全研究人员开始转战移动安全。这个时间段国内对Android安全问题的关注主要集中在恶意App分析与检测，App逆向与破解以及Android系统Root。对于Android客户端安全问题刚主要集中在信息泄露，敏感权限使用的方面，通常使用反编绎工具分析APK源码，然后进行人工审计。 1.2测试环境： win 101.3使用工具： CSDN上下载地址： apktool https://ibotpeaches.github.io/Apktool/install/（官网） dex2jar http://download.csdn.net/download/vipzjyno1/7025127 jd-gui http://download.csdn.net/download/vipzjyno1/7025145 要下载的工具可以在上面的链接自行下载，也可以到我分享的百度网盘中 1.4工具介绍：apktool 作用：资源文件获取，可以提取出图片文件和布局文件进行使用查看dex2jar 作用：将apk反编译成java源码（classes.dex转化成jar文件）jd-gui 作用：查看APK中classes.dex转化成出的jar文件，即源码文件 1.5反编译流程：一、apk反编译得到程序的源代码、图片、XML配置、语言资源等文件下载上述工具中的apktool，解压得到2个文件：apktool.bat，apktool.jar ，将需要反编译的APK文件放到该目录下，打开命令行界面（运行-CMD） ，定位到apktool文件夹，输入以下命令：apktool.bat d -f test.apk -o test （命令中test.apk指的是要反编译的APK文件全名，test为反编译后资源文件存放的目录名称，即为：apktool.bat d -f [apk文件 ] -o [输出文件夹]）说明获取成功，之后发现在文件夹下多了个test文件，点击便可以查看该应用的所有资源文件了。 二、如果你想将反编译完的文件重新打包成apk，那你可以：输入apktool.bat b test（你编译出来文件夹）便可，效果如下： 之后在之前的test文件下便可以发现多了2个文件夹:build dist(里面存放着打包出来的APK文件) 二、Apk反编译得到Java源代码下载上述工具中的dex2jar和jd-gui ，解压将要反编译的APK后缀名改为.rar或则 .zip，并解压，得到其中的额classes.dex文件（它就是java文件编译再通过dx工具打包而成的），将获取到的classes.dex放到之前解压出来的工具dex2jar-0.0.9.15 文件夹内，在命令行下定位到dex2jar.bat所在目录，输入dex2jar.bat classes.dex，效果如下：在改目录下会生成一个classes_dex2jar.jar的文件，然后打开工具jd-gui文件夹里的jd-gui.exe，之后用该工具打开之前生成的classes_dex2jar.jar文件，便可以看到源码了，效果如下：被混淆过的效果图（类文件名称以及里面的方法名称都会以a,b,c….之类的样式命名）： 安装过程中可能会出现以下几个错误：自行百度解决Input file was not found or was not readable.The system cannot write to the specified devicecould not decode arsc file 网站法律声明：本文部分内容摘自https://security.tencent.com/index.php/blog/msg/109http://blog.csdn.net/vipzjyno1/article/details/21039349/本站系博主转载，转载目的在于传递更多信息，并不代表本网赞同其观点和对其真实性负责。如涉及作品内容、版权和其它问题，请在30日内与本网联系，我们将在第一时间删除内容！[声明]本站文章版权归原作者所有 内容为作者个人观点 本站只提供参考并不构成任何投资及应用建议。本站拥有对此声明的最终解释权]]></content>
      <categories>
        <category>渗透</category>
        <category>app</category>
      </categories>
      <tags>
        <tag>app</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数字证书，数字签名，https，ssl等安全概念的解释]]></title>
    <url>%2F2018%2F02%2F06%2F%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8CSDN-markdown%E7%BC%96%E8%BE%91%E5%99%A8%2F</url>
    <content type="text"><![CDATA[讲这些概念之前，先讲讲非对称加密，与对称加密算法不同，非对称加密算法需要两个密钥：公开密钥（publickey）和私有密钥（privatekey）。公开密钥与私有密钥是一对，如果用公开密钥对数据进行加密，只有用对应的私有密钥才能解密；如果用私有密钥对数据进行加密，那么只有用对应的公开密钥才能解密。因为加密和解密使用的是两个不同的密钥，所以这种算法叫作非对称加密算法。非对称加密通常以RSA（Rivest Shamir Ad1eman）算法为代表。 下面是一个windows的RSA加解密程序步骤：（oracle数据库中也使用RSA加密算法）一：加密过程（公钥加密）1． 首先创建一份空白文档，粘入一些文本内容，放在桌面文件夹1中就好了 2打开encry.exe 点击生成密钥文件 3 在上放的钥文件中写入公钥的路径C:\Users\dell\Desktop\public.pem在下方工作目录中写入文件的路径C:\Users\dell\Desktop\1\ 4点击加密，完成加密，这时你再打开文件夹1中的1.txt文本显示的是已加密的文档 二：解密过程（私钥解密）5在上放的钥文件中写入私钥的路径C:\Users\dell\Desktop\private.pem在下方工作目录中写入文件的路径C:\Users\dell\Desktop\1\ 6点击解密，显示完成解密，这时你再打开文件夹1中的1.txt文本显示的是已解密的文档 • 数字证书• 一种文件的名称，好比一个机构或人的签名，能够证明这个机构或人的真实性。其中包含的信息，用于实现上述功能。其作用类似于现实生活中的身份证。最简单的证书包含一个公开密钥、名称以及证书授权中心的数字签名。一般情况下证书中还包括密钥的有效时间，发证机关(证书授权中心)的名称，该证书的序列号等信息。• 数字证书是由认证中心颁发的。根证书是认证中心与用户建立信任关系的基础。在用户使用数字证书之前必须首先下载和安装。就是下面这个东东。例如：CA证书等 • 数字签名• 对文件进行加密只解决了传送信息的保密问题，而防止他人对传输的文件进行破坏，以及如何确定发信人的身份还需要采取其它的手段，这一手段就是数字签名。完善的数字签名应具备签字方不能抵赖、他人不能伪造、在公证人面前能够验证真伪的能力。• 它的主要方式是，报文的发送方从报文文本中生成一个128位的散列值（或 报文摘要）。发送方用自己的私人密钥对这个散列值进行加密来形成发送方的数字签名。然后，这个数字签名将作为报文的附件和报文一起发送给报文的接收方。报文的接收方首先从接收到的原始报文中计算出128位的散列值（或报文摘要），接着再用发送方的公用密钥来对报文附加的数字签名进行解密。如果两个散列值相同、那么接收方就能确认该数字签名是发送方的。通过数字签名能够实现对原始报文的鉴别。• 应用广泛的数字签名方法主要有三种，即：RSA签名、DSS签名和Hash签名。这三种算法可单独使用，也可综合在一起使用。以下是一个Hash签名：sha1 同理MD5校验和PGP校验 Sha1校验不正确，被人捆绑木马• https在http(超文本传输协议)基础上提出的一种安全的http协议，因此可以称为安全的超文本传输协议。http协议直接放置在TCP协议之上，而https提出在http和TCP中间加上一层加密层。从发送端看，这一层负责把http的内容加密后送到下层的TCP，从接收方看，这一层负责将TCP送来的数据解密还原成http的内容。• ssl• SSL安全协议最初是由Netscape Communication公司设计开发的，又叫“安全套接层（Secure Sockets Layer）协议”，主要用于提高应用程序之间的数据的传输安全。SSL协议的整个概念可以被总结为：一个保证安装了安全套接字的客户和服务器间事务安全的协议。从名字就可以看出它在https协议栈中负责实现上面提到的加密层。因此，一个https协议栈大致是这样的：• • 要说明的是，安全套接层协议是一个保证计算机通信安全的协议，对通信对话过程进行安全保护。例如，一台客户机与一台主机连接上了，首先是要初始化握手协议，然后就建立了一个SSL。对话进行。直到对话结束，安全套接层协议都会对整个通信过程加密，并且检查其完整性。这样一个对话时段算一次握手。而HTTP协议中的每一次连接就是一次握手，因此，与HTTP相比。安全套接层协议的通信效率会高一些。 （1）接通阶段：客户通过网络向服务商打招呼，服务商回应； （2）密码交换阶段：客户与服务器之间交换双方认可的密码，一般选用RSA密码算法，也有的选用Diffie-Hellmanf和Fortezza-KEA密码算法； （3）会谈密码阶段：客户与服务商间产生彼此交谈的会谈密码； （4）检验阶段：检验服务商取得的密码； （5）客户认证阶段：验证客户的可信度； （6）结束阶段，客户与服务商之间相互交换结束的信息。 当上述动作完成之后，两者间的资料传送就会加密，另外一方收到资料后，再将编码资料还原。即使盗窃者在网络上取得编码后的资料，如果没有原先编制的密码算法，也不能获得可读的有用资料。• 注：• 1：发送时信息用对称密钥加密，对称密钥用非对称算法加密，再把两个包绑在一起传送过去。接收的过程与发送正好相反，先打开有对称密钥的加密包，再用对称密钥解密。这种加密方式在很多场景都用到，之所以不始终用非对称加密，是由于非对称加密的加密解密速度缓慢，耗费资源。• 2：由于ssl只是商家认证客户，没有客户认证商家的过程。所以后来有了一个set安全协协议。• 3：本文第一种即非对称加密，此方法在进行大型文本校验时非常缓慢]]></content>
      <categories>
        <category>等保</category>
        <category>基础概念</category>
      </categories>
      <tags>
        <tag>等保</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQLMAP DOCS]]></title>
    <url>%2F2018%2F02%2F06%2Fsqlmap1%2F</url>
    <content type="text"><![CDATA[1.sqlmap -u“被测试的url” 这里进行等级为1级的测试。注入结果类型：boolean-based blind ,error-based,AND?DR time-based blind。web应用程序版本：php5.3.3，ApacheMSQL&gt;=5.5 2.sqlmap -u“被测试的url”–dbs(列出数据库) database:db1018893_feo_web；information_schema。 3.sqlmap -u“被测试的url” -D 数据库名 – tables（列出表名） tables：user;banner;form_a;form_b;other_val;prodect;prodect_other;prodect_other_type;share;shop_list;t_m_provincial。 4.sqlmap -u“被测试的url”-D 数据库名 -T 表名 –columns（查看表格属性） 列出了user表中的属性 4.sqlmap -u“被测试的url”-D 数据库名 -T 表名 -C level，create_date , create_user（略略略） 最后得到关键的name和password]]></content>
      <categories>
        <category>渗透</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>sqlmap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQLMAP update]]></title>
    <url>%2F2018%2F02%2F06%2Fsqlmap%2F</url>
    <content type="text"><![CDATA[简介：当渗透测试系统安装好时，你会发现sqlmap不是最新的。对于使用要求版本最新的人来说，必须要更新后才行。一、linux系统更新sqlmap方法 使用sqlmap，版本已经成功更新为1.1.9.22#dev。 windows用户使用谷歌浏览器在http://sqlmap.org/中下载最新版的sqlmap]]></content>
      <categories>
        <category>渗透</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>sqlmap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F02%2F05%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
